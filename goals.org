** Storage node
*** TODO load from config
*** TODO make volume store files
*** TODO make virtual volume store files into volumes
*** TODO make upload service put chunks from volume into storage
*** TODO make hosting service take chunks from storage and yield them into pipe
*** TODO request/response parser

** Master node
*** TODO load from config
*** TODO make transaction flow for upload increment filebucket stored file size, but decrease if the upload fails
*** TODO initialization packet send/receive to cluster
*** TODO initialization packet from client upload
*** TODO finalization packet from client upload
*** TODO initialization packet from client file request
*** TODO authorization packet to client for file request, get filebucket id
*** TODO receive & approve or reject authorization code from storage cluster to store file
*** 
*** TODO request/response parser

** Client node
*** 

* General
** TODO Make storage class use hashing Id rather than atomic int for file ids
** DONE make Id class use bitset internally
** TODO Make client use its own namespace
** DONE better hashing mechanism for files, non-int ids
** DONE remove META file necessity (buckets should have uuid)
** DONE storage node/master node distinction
** TODO spawn should load from configuration for storage nodes
** TODO make FileBucketRegistry and VolumeRegistry use same base class
** converter changes
*** convertInput -> deserialize
*** convertField -> deserializeField
*** convertToValue -> serialize
** TODO make Volume an abstract class like FileStorage?
** TODO Dockerfiles for master node, storage node, and client node
** TODO replication strategy class (geolocation, backup, & )
** TODO owned filebuckets
